name: CI

'on':
  push:
    branches-ignore:
      # These should always correspond to pull requests, so ignore them for
      # the push trigger and let them be triggered by the pull_request
      # trigger, avoiding running the workflow twice.  This is a minor
      # optimization so there's no need to ensure this is comprehensive.
      - 'dependabot/**'
      - 'renovate/**'
      - 'tickets/**'
      - 'u/**'
    tags:
      - '*'
  pull_request: {}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc
        id: node_version
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.node_version.outputs.NODE_VERSION }}

      - name: Authenticate GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${NPM_PKG_TOKEN}" > ~/.npmrc
        env:
          NPM_PKG_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache downloaded Node.js modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          # Caching node_modules itself isn't compatible with npm ci
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install npm packages
        run: npm ci

      - name: Lint
        run: |
          npm run lint
          npm run format:check

      - name: Build site
        run: npm run build

  docker:
    needs: [test]

    # Only do Docker builds of tagged releases and pull requests from ticket
    # branches.  This will still trigger on pull requests from untrusted
    # repositories whose branch names match our tickets/* branch convention,
    # but in this case the build will fail with an error since the secret
    # won't be set.
    if: >
      startsWith(github.ref, 'refs/tags/') || startsWith(github.head_ref, 'tickets/')


    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Define the Docker tag
        id: vars
        run: echo ::set-output name=tag::$(.github/docker-tag.sh)

      - name: Print the tag
        id: print
        run: echo ${{steps.vars.outputs.tag}}

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v1
        id: builder

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            lsstsqre/times-square-ui:${{ steps.vars.outputs.tag }}
            ghcr.io/lsst-sqre/times-square-ui:${{ steps.vars.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GH_PKG_TOKEN=${{ secrets.GITHUB_TOKEN }}
