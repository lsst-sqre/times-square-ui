name: CI

'on':
  push:
    branches-ignore:
      # These should always correspond to pull requests, so ignore them for
      # the push trigger and let them be triggered by the pull_request
      # trigger, avoiding running the workflow twice.  This is a minor
      # optimization so there's no need to ensure this is comprehensive.
      - 'dependabot/**'
      - 'renovate/**'
      - 'tickets/**'
      - 'u/**'
    tags:
      - '*'
  pull_request: {}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc
        id: node_version
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.node_version.outputs.NODE_VERSION }}

      - name: Authenticate GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${NPM_PKG_TOKEN}" > ~/.npmrc
        env:
          NPM_PKG_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache downloaded Node.js modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          # Caching node_modules itself isn't compatible with npm ci
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install npm packages
        run: npm ci

      - name: Lint
        run: |
          npm run lint
          npm run format:check

      - name: Build site
        run: npm run build

  docker:
    needs: [test]

    # Only do Docker builds for pushes to ticket branches and tagged releases.
    if: startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/tickets/')

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Define the Docker tag
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF} | sed -E 's,refs/(heads|tags)/,,' | sed -E 's,/,-,g')

      - name: Print the tag
        id: print
        run: echo ${{steps.vars.outputs.tag}}

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v1
        id: builder

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: lsstsqre/times-square-ui:${{ steps.vars.outputs.tag }}
          target: production
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            GH_PKG_TOKEN=${{ secrets.GITHUB_TOKEN }}

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
